name: Android – Debug build

# ──────────────────────────────────────────────────────────────
# Run on every push to main, on pull‑requests, and on demand
on:
  push:
    branches: [ main ]          # change if your default branch differs
  pull_request:
  workflow_dispatch:

# ──────────────────────────────────────────────────────────────
jobs:
  debug-apk:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣  Clone the repo **with sub‑modules**
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive     # ← critical for Termux:X11
          fetch-depth: 0            # (keeps full history; omit if you like)

      # 2️⃣  Set up JDK 17 and cache the Gradle user‑home dir
      - name: Set up Java & Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      # 3️⃣  Make the Gradle wrapper executable (Linux runners need this)
      - name: Gradle wrapper permissions
        run: chmod +x ./gradlew

      # 4️⃣  Build the DEBUG variant (change :app if your module has a different name)
      - name: Build debug APK
        run: ./gradlew :app:assembleDebug

      # 5️⃣  Upload the APK(s) produced under app/build/outputs/apk/debug/
      - name: Upload APK artefact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk

  # ────────────────────────────────────────────────────────────
  # Optional nightly clean‑up so artefacts don’t pile up
  cleanup-old-artifacts:
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - uses: c-hive/gha-remove-artifacts@v4
        with:
          age: '14 days'

# Enable the clean‑up once a day at 03:00 UTC:
#
# on:
#   schedule:
#     - cron: '0 3 * * *'
#
# (Uncomment the block above or schedule inside the Actions UI.)
