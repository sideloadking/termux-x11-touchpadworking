# .github/workflows/build-apk.yml
name: Android – Build APK

# ──────────────────────────────────────────────────────────────
# 1. Triggers
on:
  push:
    branches: [ main ]          # change if your default branch differs
  pull_request:
  workflow_dispatch:
    inputs:
      buildVariant:
        description: 'Variant to build (Gradle task assemble<Variant>)'
        type: choice
        required: true
        default: debug          # assembleDebug
        options:
          - debug
          - release             # assembleRelease

      targetBranch:
        description: 'Git ref to check out (leave blank to use the ref that triggered the run)'
        type: string
        required: false

# ──────────────────────────────────────────────────────────────
jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣  Clone the repo (with sub‑modules) at the requested ref
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ github.event.inputs.targetBranch || github.ref }}

      # 2️⃣  Set up JDK 17 and cache Gradle
      - name: Set up Java & Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      # 3️⃣  Make wrapper executable (Linux runners need this)
      - name: Gradle wrapper permissions
        run: chmod +x ./gradlew

      # 4️⃣  Build the chosen variant
      - name: Build selected variant
        run: ./gradlew :app:assemble${{ github.event.inputs.buildVariant || 'debug' }}

      # 5️⃣  Upload the APK(s)
      - name: Upload APK artefact
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ github.event.inputs.buildVariant || 'debug' }}
          path: app/build/outputs/apk/${{ github.event.inputs.buildVariant || 'debug' }}/*.apk

# ──────────────────────────────────────────────────────────────
# (Optional) nightly clean‑up – enable if you want artefacts auto‑purged
#
#  cleanup-old-artifacts:
#    if: ${{ github.event_name == 'schedule' }}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: c-hive/gha-remove-artifacts@v4
#        with:
#          age: '14 days'
#
# on:
#   schedule:
#     - cron: '0 3 * * *'
